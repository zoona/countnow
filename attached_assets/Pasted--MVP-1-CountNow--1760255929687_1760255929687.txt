# 즉흥 카운팅 모바일 웹 MVP 기획서

## 1) 제품 개요

* **제품명(가칭)**: 즉카(즉흥 카운터) / CountNow / 누가더?
* **한줄 소개**: 가족·친구·회식에서 즉흥 룰을 정하고 버튼 몇 번으로 **사람별 카운팅/점수**를 기록·집계하는 모바일 웹
* **핵심 가치**: 준비 없이 10초만에 방 만들고, 모두가 링크로 들어와 누가 눌렀는지 실시간으로 보며, **자동 순위/벌칙 추천**까지 한 번에
* **핵심 지표(KPI)**: 방 생성→첫 입력 전환율, 세션 평균 참여자 수, 세션 유지시간, 다음날 재방문율(D1), 공유율

---

## 2) 주요 유즈케이스

1. **영어 금지 게임**: 영어 단어 말하면 해당 사람 버튼 탭(+1)
2. **수다 금지**: 가장 많이 말한 사람 벌칙 → **최다 카운트 자동 탐지**
3. **웃으면 탈락**: 웃을 때마다 담당자가 해당 인원 +1 기록
4. **줄넘기/팔굽혀펴기**: 사람별 횟수 카운팅 → 제한시간 모드
5. **가위바위보 리그**: 승/패 기록으로 **간단 승률** 계산

---

## 3) 기능 범위 (MVP)

**필수 (P0)**

* [ ] 방 만들기(세션) / 링크 공유
* [ ] 참가자(이름·색상) 등록 및 정렬
* [ ] 사람별 **+1 카운트 버튼** (긴누름 반복 증가, 실수 취소 1단계)
* [ ] **실시간 동기화**(다중 기기 동시 입력)
* [ ] 타이머/라운드 옵션(예: 3분 카운팅)
* [ ] 결과 화면: 순위/동점 표시, 간단 통계(최다/최소, 총합)
* [ ] 로컬 저장(최근 방 재입장), 익명 사용(무가입)

**우선순위 높음 (P1)**

* [ ] **모드 프리셋**: "영어 금지", "웃으면 +1", "자유 카운트"
* [ ] **랜덤 벌칙 생성기** (가벼운 50종 텍스트)
* [ ] 공유 화면(참여 코드/QR)

**차후 확장 (P2)**

* 음성 인식(웹 스피치 API) / 웃음 감지(VAD)
* 사용자 계정(이메일/소셜) & 히스토리 저장
* 커스텀 벌칙/미션 라이브러리, 테마 스킨
* 팀·패밀리 그룹, 템플릿 저장, 통계 대시보드

---

## 4) 사용자 플로우 (요약)

1. **방 생성** → 2) **참여자 등록** → 3) **모드·타이머 선택** → 4) **카운팅 진행** → 5) **결과/순위 발표** → 6) **벌칙 랜덤**(선택) → 7) **다시하기**

```mermaid
flowchart TD
  A[홈] --> B[방 생성]
  B --> C[참여자 등록]
  C --> D[모드/옵션 선택]
  D --> E[카운팅 화면]
  E -->|시간종료/수동끝| F[결과/순위]
  F --> G{벌칙 뽑기?}
  G -->|예| H[랜덤 벌칙]
  G -->|아니오| I[다시하기 or 종료]
```

---

## 5) 화면 설계 (모바일 퍼스트)

### 5.1 홈/방 생성

* 요소: 로고, "바로 시작"(방 생성), 최근 방 재입장, 하단 미니 튜토리얼
* 생성 시 옵션(슬라이드업): 방 이름(기본: 오늘날짜-시각), 공개/비공개(코드 필요), 타이머(없음/1/3/5/10분)

### 5.2 참여자 등록

* 리스트 형태(카드): 이름 입력, 칩 색상 선택, 추가/삭제
* UX: **자녀 이름, 엄마/아빠 프리셋** 버튼 제공

### 5.3 모드 선택(프리셋)

* 카드 3개: 자유 카운트 / 영어 금지(위반자 +1) / 웃으면 +1
* 상세 옵션: 버튼 크기(대/중), 1회당 증가량(+1/+5), 실수 취소 허용

### 5.4 카운팅 화면(핵심)

* **그리드 버튼**: 참여자별 1개 큰 버튼(색상/이름/현재값)
* 상단: 타이머(남은시간), 일시정지, 리셋(길게 눌러 확인)
* 하단: 최근 이벤트 로그(홍길동 +1, 00:12)
* 제스처: 길게 누르면 **연속 +1(200ms 간격)**, 왼쪽 스와이프 → -1(최근 1회만), 가로/세로 자동 재배치

### 5.5 결과/순위 화면

* 카드: 1등~N등(동점 표시), 막대 차트, 총합/평균/표준편차(간단)
* CTA: "벌칙 랜덤 뽑기" / "다시하기" / "공유 이미지 저장"

### 5.6 벌칙 랜덤 화면(P1)

* 룰렛 애니메이션(텍스트), 예: "물 한컵 가져오기", "춤 10초 추기"

---

## 6) 인터랙션 규칙/엣지케이스

* **동시 입력 충돌**: 서버 타임스탬프 기준 선착 처리, 동일 ms 충돌 시 클라이언트 ID 정렬
* **오입력 방지**: -1은 직전 이벤트에만 허용(최대 1회 롤백)
* **네트워크 오프라인**: 로컬 큐에 적재→재연결 시 서버에 순서대로 전송
* **타이머 종료**: 종료 애니메이션 + 햅틱 + 자동 결과 이동(5초 카운트다운)
* **참가자 변경**: 진행 중에는 비활성(안정성), 일시정지 상태에서만 추가/삭제

---

## 7) 데이터 모델(초안)

**Entity**

* Session { id, name, code, createdAt, expiresAt, timerSec, status }
* Player { id, sessionId, name, color, order }
* CounterEvent { id, sessionId, playerId, delta(+1|-1), ts, clientId }
* RulePreset { id, name, config(json) }
* Penalty { id, text, category, locale }

**파생 집계**

* Realtime View: playerTotals[ playerId → sum(delta) ]

---

## 8) 실시간 동기화 설계

* 옵션 A(추천): **Supabase Realtime**(Postgres + Realtime) 또는 **Firebase Firestore** snapshot
* 옵션 B: 자체 WebSocket 게이트웨이(FastAPI/Node) + Redis Pub/Sub
* 클라이언트: 세션 구독 → 이벤트 단위 append → 로컬 합계 캐시 → 서버 스냅샷과 주기적 재동기화

---

## 9) 기술 스택(제안)

* **FE**: React + Vite + TypeScript + TailwindCSS + PWA(홈화면 추가, 오프라인)
* **BE**: (MVP 무서버 가능) Supabase/Firebase로 시작 → 추후 FastAPI/Node 전환
* **배포**: Vercel/Netlify(프론트), Supabase/Firebase(백엔드)
* **분석**: PostHog(이벤트), Sentry(크래시)
* **테스트**: Vitest + Playwright(모바일 뷰)

---

## 10) API/스토리지 설계(백엔드형 선택 시)

* `POST /sessions` 방 생성
* `POST /sessions/{id}/players` 참가자 추가/삭제/정렬
* `POST /sessions/{id}/events` 카운트 이벤트 기록
* `GET /sessions/{id}/snapshot` 현재 합계/랭킹
* 보안: 세션별 writeKey(링크 내 포함), 읽기 전용 readKey 분리(선택)

---

## 11) 모드 프리셋(규칙 템플릿)

* 자유 카운트: 누구든 +1
* 영어 금지: 진행자만 입력, 혹은 **자기 신고** 버튼 허용
* 웃으면 +1: 진행자 입력 / 음성·VAD 확장 가능(차후)

---

## 12) 수익화/가격

* Free: 방 1개 동시, 광고 배너
* Pro(₩2,900/월): 광고 제거, 벌칙 라이브러리 200+, 테마 스킨, 결과 PNG 내보내기, 방 히스토리 30일
* Family/Team(₩4,900/월): 그룹/템플릿 저장, 참여자 프리셋, 고급 통계, 다중 진행자

---

## 13) 브랜딩/네이밍 후보

* 즉카, 누가더?, 안돼카운트, TapTap, FunCount, CountNow
* 톤&매너: 밝은 파스텔, 둥근 버튼, 큰 타이포(아이도 누르기 쉬움)

---

## 14) 출시 로드맵(7일 스프린트)

* **Day1**: 와이어프레임, 데이터 모델, 라우팅 스켈레톤
* **Day2**: 세션/참여자 UI, 색상 선택, 로컬 상태
* **Day3**: 카운팅 그리드, 제스처(롱프레스/스와이프), 타이머
* **Day4**: Supabase 연동(실시간), 오프라인 큐
* **Day5**: 결과/순위, 공유 링크/QR, 벌칙 50종
* **Day6**: PWA, 반응형, 기본 분석/로그
* **Day7**: QA/버그픽스, 오픈베타(친구·가족 피드백)

---

## 15) QA 시나리오(발췌)

* 3명이 서로 다른 폰에서 동시에 +1 연타 시 합계 정확성
* 오프라인 → 다시 온라인 복귀 시 이벤트 순서 유실 없음
* 타이머 종료 직전 입력(±100ms) 처리 일관성
* 세로↔가로 전환 시 버튼 레이아웃 안정
* 실수 -1 롤백 제한 정상 동작

---

## 16) 접근성/아동 UX 고려

* 버튼 최소 56dp, 고대비 모드, 햅틱 피드백
* 이름을 색·이모지로 함께 표기(색각이상 배려)

---

## 17) 개인정보/보안

* 무가입/무개인정보로 시작(세션 만료 24시간)
* 공개 방 탐색 불가(직접 링크/코드만 입장)
* 향후 계정 기능 도입 시 이메일·OAuth, 최소 수집 원칙

---

## 18) 그래픽/공유 자산

* 결과 공유용 PNG 템플릿(순위/그래프/날짜)
* QR 공유 카드

---

## 19) 확장 로드맵(차후)

* 음성 명령: "아빠 플러스 하나" → STT → 명령 파싱
* 웃음/잡음 감지: on-device VAD + 임계치
* 커뮤니티 템플릿 마켓(벌칙/미션 공유)
* 회식/학교/캠핑 전용 테마 팩

---

## 20) 간단 비용·시간 추정(1인 개발 기준)

* 1차 출시(MVP): 1~2주
* 클라우드 비용: Supabase Free/Pro, Vercel Hobby → 월 수천~수만원 수준(초기)

---

## 21) 성공 시그널(검증 가설)

* 첫 사용 10분 안에 2개 이상 세션 재생성
* 오프라인 이벤트(가족 모임/캠핑/회식)에서의 재사용
* 초대링크당 평균 2명 이상 유입

---

### 부록 A. 예시 JSON

```json
{
  "session": {"id":"s_abc","name":"주말가족-밤","timerSec":180},
  "players": [
    {"id":"p_mom","name":"엄마","color":"#FF8A80"},
    {"id":"p_dad","name":"아빠","color":"#80D8FF"},
    {"id":"p_son","name":"아들","color":"#A7FFEB"}
  ],
  "events": [
    {"playerId":"p_son","delta":1,"ts":1728637200123},
    {"playerId":"p_dad","delta":1,"ts":1728637201456}
  ]
}
```

### 부록 B. 버튼 레이아웃 가이드

* 3인: 2x2(상단 2, 하단 1 가로폭 100%)
* 4~6인: 2열 그리드(가로 2)
* 7인+: 3열 그리드 + 스크롤

---

> 위 설계로 바로 구현 들어갈 수 있습니다. 원하면 **React + Tailwind 기반의 기본 화면 코드 스켈레톤**도 생성해줄게요.
