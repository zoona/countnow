# CountNow 개발 규칙

## 프로젝트 개요
CountNow는 "숫자 세기"라는 핵심 개념의 웹 애플리케이션입니다. 검색 친화적이고 직관적인 한국어 용어를 사용합니다.

## 필수 용어 체계 (절대 변경 금지)
- "카운팅" → "숫자 세기"
- "혼자 카운팅" → "혼자 세기"  
- "여럿이 카운팅" → "같이 세기"
- "카운트" → "숫자"
- "카운팅 시작" → "세기 시작"
- "최근 카운팅" → "최근 기록"
- "참가자 선택" → "함께할 사람"

## UI/UX 일관성 규칙
- 모든 버튼 높이: h-16 (64px)
- 보더 반경: rounded-3xl (24px)
- 그림자: shadow-lg
- 아이콘 크기: h-6 w-6
- 체크 버튼 색상: bg-green-500
- 삭제 버튼: 카드 하단에 별도 배치

## 컴포넌트 작성 규칙
- 함수형 컴포넌트 사용
- TypeScript 인터페이스로 Props 정의
- useEffect cleanup 함수 필수
- data-testid 속성 필수 추가

## 스타일링 규칙
- Tailwind CSS 유틸리티 클래스 우선 사용
- 인라인 스타일은 동적 색상만 사용
- 커스텀 클래스: hover-elevate, active-elevate-2

## 데이터 저장 규칙
- localStorage 사용 (2초 간격 자동 저장)
- 에러 처리: try-catch 필수
- 커스텀 참가자: 실시간 저장

## 이모지 사용 규칙
- UI에서 장식적 이모지 사용 금지
- 기능적 용도로만 사용 (참가자 식별)
- 랜덤 선택 시 중복 방지 로직 필수

## 접근성 규칙
- 색상만으로 정보 전달 금지
- 터치 타겟 최소 56px
- 명확한 라벨 제공

## 성능 규칙
- 롱프레스 이벤트 cleanup 필수
- 메모리 누수 방지
- React.memo, useMemo 적절히 사용

## 테스트 ID 규칙
- 버튼: data-testid="button-{action}"
- 텍스트: data-testid="text-{entity}-{property}"
- 입력: data-testid="input-{purpose}"
- 카드: data-testid="card-{entity}-{id}"

## 코드 생성 시 필수 사항
1. 기존 패턴과 일관성 유지
2. 위 용어 체계 준수
3. UI 규칙 적용
4. 접근성 고려
5. 성능 최적화

## Git 커밋 메시지 규칙
- **One-line 형식**: 제목만 작성, 본문 없이 한 줄로 작성
- **Prefix 필수**: 모든 커밋은 아래 prefix 중 하나로 시작
  - `feat:` 새로운 기능 추가
  - `fix:` 버그 수정
  - `docs:` 문서 변경
  - `style:` 코드 포맷팅, 세미콜론 등 (기능 변경 없음)
  - `refactor:` 코드 리팩토링
  - `test:` 테스트 추가/수정
  - `chore:` 빌드/설정/배포 관련 변경
  - `perf:` 성능 개선
- **형식**: `prefix: 간결한 설명` (50자 이내 권장)
- **예시**: `feat: 혼자 세기 롱프레스 기능 추가`

## 금지 사항
- "카운팅", "카운트" 용어 사용 금지
- 일관성 없는 버튼 크기/스타일
- 장식적 이모지 사용
- 색상만으로 정보 전달
- cleanup 없는 useEffect
- 멀티라인 커밋 메시지 (본문 작성 금지)
